void set(char*, long);
void cpy(char*, char*);

#define S(x,v) cpy(mem[(x)],#v)
#define O(x) set(CC,(x))
#define $PRINTFP	R01051U01045
#define $PACKFP		R01034U01032
#define $UNPACKFP	R01029U01025
#define $SHL		R01008U01003
#define $EXIT		900000000000

#define $FPADD		R00890U00809

// DO NOT MODIFY ABOVE

O( 809);

// FP KERNEL
S( 800, 000000000000);	// EXP1
S( 801, 000000000000);	// EXP2
S( 802, 000000000000);	// MAN1
S( 803, 000000000000);	// MAN2
S( 804, 011000000000);	// FEXP CONSTANT
S( 805, 000111111111);	// FMNT CONSTANT
S( 806, 003000000022);	// FP1 (INPUT)
S( 807, 001000000003);	// FP2 (INPUT)
S( 808, 000000000000);	// FP3 (RESULT)
S( 809, B00806C01020);	// UNPACK FP1
S( 810, $UNPACKFP);		// CALL
S( 811, B01021C00800);	// SAVE TO EXP1
S( 812, B01022C00802);	// SAVE TO MAN1
S( 813, B00807C01020);	// UNPACK FP2
S( 814, $UNPACKFP);		// CALL
S( 815, B01021C00801);	// SAVE TO EXP2
S( 816, B01022C00803);	// SAVE TO MAN2
S( 817, B00800L00801);
S( 818, Q00850000000);
S( 819, T00880000000);

S( 820, B00801S00800);
S( 821, H01000B00802);
S( 822, H00999000000);
S( 823, $SHL);			// CALL SHIFT LEFT
S( 824, B00999A00803);	// MAN1 (SHIFTED) + MAN2
S( 825, C01030B00800);
S( 826, C01031000000);
S( 827, $PACKFP);		// PACK FP
S( 828, B01030C00808);
S( 829, 000000U00890);

S( 850, 000000000000); // EXP1 = EXP2

S( 880, 000000000000); // EXP1 > EXP2
S( 881, B00800S00801); 
S( 882, H01000B00802);
S( 883, H00999000000);
S( 884, $SHL);			// CALL SHIFT LEFT
S( 885, B00999A00803);	// MAN1 (SHIFTED) + MAN2
S( 886, C01030B00801);
S( 887, C01031000000);
S( 888, $PACKFP);		// PACK FP
S( 889, B01030C00808);

// *** UTILITY FUNCTIONS

// SHIFT LEFT SUBROUTINE (N << M)
S( 999, 000000000030); // N
S(1000, 000000000005); //   << M
S(1001, 000000000001); // CONSTANT 1
S(1002, 000000000000); // CONSTANT 0
S(1003, B01000L01002); // ENTRY POINT
S(1004, Q01008S01001);
S(1005, H01000000000);
S(1006, B00999010000);
S(1007, H00999U01003);

// SHIFT RIGHT SUBROUTINE (N >> M)
S(1010, 000000000030); // N
S(1011, 000000000005); //   >> M
S(1012, 000000000001); // CONSTANT 1
S(1013, 000000000000); // CONSTANT 0
S(1014, B01011L01013); // ENTRY POINT
S(1015, Q01019S01012);
S(1016, H01011000000);
S(1017, B01010-10000);
S(1018, H01010U01014);

// UNPACK FP SUBROUTINE
S(1020, 000000000000); // FP VALUE
S(1021, 000000000000); // EXP
S(1022, 000000000000); // MANTISSA
S(1023, 011000000000); // EXP CONSTANT
S(1024, 000111111111); // MANTISSA CONSTANT
S(1025, F01023E01020); // ENTRY POINT
S(1026, -90000C01021);
S(1027, F01024E01020);
S(1028, 000000C01022);

// PACK FP SUBROUTINE
S(1030, 000000000000); // FP
S(1031, 000000000000); // EXP
S(1032, B01031090000);
S(1033, A01030C01030);

// PRINT FP NUMBER
S(1040, 000000000000); // FP
S(1041, 000111111111); // MNT FILTER
S(1042, 111000000000); // EXP FILTER
S(1043, 100000000000); // SIGN FILTER
S(1044, 000000000E00); // OUTPUT FORMAT
S(1045, F01042BF1040);
S(1046, -90000A01044);
S(1047, C01044F01041);
S(1048, BF1040030000);
S(1049, A01044C01044);
S(1050, 101044000000);
